{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacoesService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","item","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","lista","obterNegociacoes","filter","some","JSON","stringify","obj"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["import { HttpService } from './HttpService.js';\r\nimport { ConnectionFactory } from './ConnectionFactory.js';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao.js';\r\nimport { Negociacao } from '../models/Negociacao.js';\r\n\r\nexport class NegociacoesService {\r\n\r\n    constructor () {\r\n        this._http = new HttpService();        \r\n    }\r\n\r\n\r\n    obterNegociacoesSemana () {     \r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior () {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaRetrasada () {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    obterNegociacoes() {        \r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\t} \r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection =>  new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')              \r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error ('Não foi possível adicionar a negociação');\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar as negociações');\r\n            });           \r\n    }\r\n\r\n\r\n    apaga () {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(mensagem => {\r\n                'Negociações removidas com sucesso'\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Falha ao apagar as negociações');\r\n            });       \r\n    }\r\n\r\n\r\n    importa(lista) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(item => \r\n                    !lista.negociacoes.some(obj => \r\n                        JSON.stringify(obj) == JSON.stringify(item)\r\n                    )\r\n                )\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            } );             \r\n    }\r\n\r\n}"]}