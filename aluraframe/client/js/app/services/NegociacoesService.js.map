{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["NegociacoesService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","item","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","lista","obterNegociacoes","filter","some","JSON","stringify","obj"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["class NegociacoesService {\r\n\r\n    constructor () {\r\n        this._http = new HttpService();        \r\n    }\r\n\r\n\r\n    obterNegociacoesSemana () {     \r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior () {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemanaRetrasada () {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes => \r\n                resolve (negociacoes.map(item => new Negociacao(new Date(item.data), item.quantidade, item.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações');\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    obterNegociacoes() {        \r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\t} \r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection =>  new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')              \r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error ('Não foi possível adicionar a negociação');\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar as negociações');\r\n            });           \r\n    }\r\n\r\n\r\n    apaga () {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(mensagem => {\r\n                'Negociações removidas com sucesso'\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Falha ao apagar as negociações');\r\n            });       \r\n    }\r\n\r\n\r\n    importa(lista) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(item => \r\n                    !lista.negociacoes.some(obj => \r\n                        JSON.stringify(obj) == JSON.stringify(item)\r\n                    )\r\n                )\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            } );             \r\n    }\r\n\r\n}"]}